---
import NavButton from "./NavButton.astro";

interface Props {
  for?: "footer" | "header";
}

const { for: on = "header" } = Astro.props;

const isFooter = on === "footer";
---

<div
  role="navigation"
  class:list={[
    isFooter ? "flex" : "flex",
    "w-full h-full items-center justify-end text-white",
  ]}
>
  {!isFooter && <NavButton />}
  <nav
    id="nav_list"
    class:list={[
      "items-center gap-4 text-lg font-extralight flex-shrink-0 w-full xl:w-fit peer-checked:flex peer-checked:absolute peer-checked:bg-p-blue peer-checked:z-40 peer-checked:inset-0 peer-checked:flex-col peer-checked:items-center peer-checked:pt-20 peer-checked:text-xl",
      isFooter ? "flex flex-col sm:flex-row" : "xl:flex hidden",
    ]}
  >
    <a class="hover:scale-110 transition-transform duration-150" href="/"
      >Inicio</a
    >
    <a
      class="hover:scale-110 transition-transform duration-150"
      href="/ilustradorxs">Ilustradorxs</a
    >
    <a
      class="hover:scale-110 transition-transform duration-150"
      href="/festivales">Festivales</a
    >
    <a
      class="hover:scale-110 transition-transform duration-150"
      href="/podcasts">Podcasts</a
    >
    <!-- <a
      class="hover:scale-110 transition-transform duration-150"
      href="/talleres">Talleres</a
    > -->
  </nav>
</div>

<script>
  const toggleBtn = document.querySelector(
    "#toggle-nav-btn"
  ) as HTMLInputElement;
  const body = document.querySelector("body") as HTMLBodyElement;
  toggleBtn?.addEventListener("change", () => {
    if (toggleBtn.checked) return (body.style.overflow = "hidden");
    body.style.overflow = "";
  });
</script>
